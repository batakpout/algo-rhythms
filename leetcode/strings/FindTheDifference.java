package leetcode.strings;

import java.util.Arrays;
import java.util.*;
import java.util.Scanner;

/**
 * LC: E: 389. Find the Difference
 * You are given two leetcode.strings s and t.
 * String t is generated by random shuffling string s and then add one more letter at a random position.
 * Return the letter that was added to t.
 * Example:
 * Input: s = "abcd", t = "abcde" Output: "e"
 * Explanation: 'e' is the letter that was added.
 * Approaches:
 * outside_leetcode.sorting, hashtable, leetcode.strings, bit manipulation
 */
public class FindTheDifference {

    public static char usingMap(String s, String t) {
        Map<Character, Integer> m = new HashMap<>();
        for (char ch : s.toCharArray()) {
            m.put(ch, m.getOrDefault(ch, 0) + 1);
        }
        for(char ch: t.toCharArray()) {
            m.put(ch, m.getOrDefault(ch, 0) - 1);
            if(m.get(ch) < 0) return ch;
        }
        return 'a';//fallback, should not happen
    }

    public static char usingSum(String s, String t) {
        int sum = 0;
        for (char ch : t.toCharArray()) sum += ch;
        for (char ch : s.toCharArray()) sum -= ch;
        return (char) sum;
    }

    public static char usingSorting(String s, String t) {
        char[] sArr = s.toCharArray();
        char[] tArr = t.toCharArray();
        Arrays.sort(sArr);
        Arrays.sort(tArr);
        for (int i = 0; i < sArr.length; i++) {
            if (sArr[i] != tArr[i]) return tArr[i];
        }
        return tArr[tArr.length - 1];
    }

    public static char usingXOR(String s, String t) {
        int xor = 0;
        for (char ch : t.toCharArray()) xor ^= ch;
        for (char ch : s.toCharArray()) xor ^= ch;
        return (char) xor;
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter string s: ");
        String s = scanner.nextLine();

        System.out.print("Enter string t (s with one extra letter): ");
        String t = scanner.nextLine();

        char r1 = usingMap(s, t);
        char r2 = usingSum(s, t);
        char r3 = usingXOR(s, t);
        char r4 = usingSorting(s, t);

        System.out.println("Using Map:      " + r1);
        System.out.println("Using Sum:      " + r2);
        System.out.println("Using XOR:      " + r3);
        System.out.println("Using Sorting:  " + r4);


    }
}